version: "3.8"

networks:
  custom:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.100.0/24

volumes:
  jenkins-docker-certs:
  jenkins-data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgres_data:
  postgresql_data:
  nexus_data:

services:
  jenkins:
    image: manrala/blueocean:2.472
    container_name: jenkins
    build: 
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    networks:
      custom:
        ipv4_address: 192.168.100.10
    dns: 8.8.8.8
    domainname: manrala.com
    hostname: jenkins
    restart: on-failure
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins-docker-certs:/certs/client:ro
    depends_on:
      - docker
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '2G'

  docker:
    image: docker:dind
    container_name: docker
    ports:
      - 2376:2376
      - 8888:8888
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    networks:
      custom:
        ipv4_address: 192.168.100.20
        aliases:
          - docker
    privileged: true
    domainname: manrala.com
    hostname: docker
    restart: always
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '2G'

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
    networks:
      custom:
        ipv4_address: 192.168.100.21
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - 9000:9000
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '2G'
    #sudo vim /etc/sysctl.conf
    #vm.max_map_count = 262144  
  db:
    image: postgres:15
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonarqube
      POSTGRES_PASSWORD: sonarqube
      POSTGRES_DB: sonarqube
    networks:
      custom:
        ipv4_address: 192.168.100.25
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1G'

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    ports:
      - 8081:8081
    volumes:
      - nexus_data:/nexus-data
    networks:
      custom:
        ipv4_address: 192.168.100.30
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '2G'
